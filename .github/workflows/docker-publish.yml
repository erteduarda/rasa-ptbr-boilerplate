name: build-telegram

on:
  push:
    branches: ["main"]
    tags: ["v*.*.*"]
  pull_request:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      # 1) Clona o repositório
      - name: Checkout do código
        uses: actions/checkout@v4

      # 2) Copiar o .env da raiz para dentro de bot/ (importante para o Makefile não falhar)
      - name: Copiar .env para dentro de bot/
        run: cp ./.env ./bot/.env

      # 3) Instalar Cosign, caso queira assinar depois (não roda em PR)
      - name: Instalar Cosign (só fora de PR)
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20
        with:
          cosign-release: 'v2.2.4'

      # 4) Fazer login no registry (não roda em PR)
      - name: Fazer login no registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 5) Build das imagens usando o docker-compose-telegram.yml
      - name: Build das imagens (docker-compose-telegram.yml)
        run: |
          docker compose -f docker-compose-telegram.yml build

      # 6) Push das imagens (apenas fora de PR)
      - name: Publicar imagens no registry (docker-compose-telegram.yml)
        if: github.event_name != 'pull_request'
        run: |
          docker compose -f docker-compose-telegram.yml push

      # 7) (Opcional) Assinar as imagens com Cosign (apenas fora de PR)
      - name: Assinar imagens publicadas com Cosign
        if: github.event_name != 'pull_request'
        env:
          # Ajuste esta tag conforme o serviço que você definiu no seu docker-compose-telegram.yml.
          # Exemplo: se, dentro do YAML, você colocou:
          #   services:
          #     bot:
          #       image: ghcr.io/${{ github.repository }}:bot-${{ github.sha }}
          #
          # então usamos exatamente essa mesma string aqui:
          IMAGE_TAG: ghcr.io/${{ github.repository }}:bot-${{ github.sha }}
        run: |
          # Obtém o digest da imagem que acabou de subir
          DIGEST=$(docker manifest inspect "$IMAGE_TAG" --json \
            | jq -r '.manifests[0].digest')
          cosign sign --yes "$IMAGE_TAG@$DIGEST"

          # Se você tiver outros serviços (por exemplo, "worker"), repita o bloco acima:
          # IMAGE_TAG=ghcr.io/${{ github.repository }}:worker-${{ github.sha }}
          # DIGEST=$(docker manifest inspect "$IMAGE_TAG" --json | jq -r '.manifests[0].digest')
          # cosign sign --yes "$IMAGE_TAG@$DIGEST"
