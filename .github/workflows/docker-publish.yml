name: build-telegram

on:
  push:
    branches: ["main"]
    tags: ["v*.*.*"]
  pull_request:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      # 1) Clonar o reposit贸rio
      - name: Checkout do c贸digo
        uses: actions/checkout@v4

      # 2) Copiar o .env da raiz para dentro de bot/
      - name: Copiar .env para dentro de bot/
        run: cp ./.env ./bot/.env

      # 3) Criar a pasta env/ e copiar .env para env/bot-telegram.env
      - name: Preparar arquivo de ambiente para o Compose
        run: |
          mkdir -p env
          cp ./.env ./env/bot-telegram.env

      # 4) Instalar Cosign (s贸 fora de PR)
      - name: Instalar Cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20
        with:
          cosign-release: 'v2.2.4'

      # 5) Fazer login no GHCR (s贸 fora de PR)
      - name: Fazer login no registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 6) Build e Push das imagens
      - name: Build das imagens (docker-compose-telegram.yml)
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_SHA: ${{ github.sha }}
        run: |
          docker compose -f docker-compose-telegram.yml build

      - name: Publicar imagens no registry (docker-compose-telegram.yml)
        if: github.event_name != 'pull_request'
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_SHA: ${{ github.sha }}
        run: |
          docker compose -f docker-compose-telegram.yml push


